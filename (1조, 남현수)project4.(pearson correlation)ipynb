{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1574DWw6G9Yw-XS9d_DrRjvks672r5vkv","authorship_tag":"ABX9TyOnSOlubMYqQ0wAbPA57csd"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"mDKNA75ZGw1R"},"outputs":[],"source":["import pandas as pd\n","import numpy as np"]},{"cell_type":"code","source":["# 거의 28000000 만개의 행으로 구성되어있다... 이거 분명히 돌리면 Ram이 터진다. 어떻게 할까...?\n","rating_df = pd.read_csv(\"/content/drive/MyDrive/project4/ml-latest/ratings.csv\")\n","rating_df"],"metadata":{"id":"DoGcFR4cG2c9","executionInfo":{"status":"ok","timestamp":1676006641117,"user_tz":-540,"elapsed":25006,"user":{"displayName":"남 현수","userId":"05471167397284801950"}},"colab":{"base_uri":"https://localhost:8080/","height":423},"outputId":"8c2da6ae-1a23-438c-8afb-2808c51a07d3"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          userId  movieId  rating   timestamp\n","0              1      307     3.5  1256677221\n","1              1      481     3.5  1256677456\n","2              1     1091     1.5  1256677471\n","3              1     1257     4.5  1256677460\n","4              1     1449     4.5  1256677264\n","...          ...      ...     ...         ...\n","27753439  283228     8542     4.5  1379882795\n","27753440  283228     8712     4.5  1379882751\n","27753441  283228    34405     4.5  1379882889\n","27753442  283228    44761     4.5  1354159524\n","27753443  283228    54286     4.5  1354159718\n","\n","[27753444 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-fa8703f7-b113-4887-9e88-a6716cb0a525\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>userId</th>\n","      <th>movieId</th>\n","      <th>rating</th>\n","      <th>timestamp</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>307</td>\n","      <td>3.5</td>\n","      <td>1256677221</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>481</td>\n","      <td>3.5</td>\n","      <td>1256677456</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>1091</td>\n","      <td>1.5</td>\n","      <td>1256677471</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1257</td>\n","      <td>4.5</td>\n","      <td>1256677460</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>1449</td>\n","      <td>4.5</td>\n","      <td>1256677264</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>27753439</th>\n","      <td>283228</td>\n","      <td>8542</td>\n","      <td>4.5</td>\n","      <td>1379882795</td>\n","    </tr>\n","    <tr>\n","      <th>27753440</th>\n","      <td>283228</td>\n","      <td>8712</td>\n","      <td>4.5</td>\n","      <td>1379882751</td>\n","    </tr>\n","    <tr>\n","      <th>27753441</th>\n","      <td>283228</td>\n","      <td>34405</td>\n","      <td>4.5</td>\n","      <td>1379882889</td>\n","    </tr>\n","    <tr>\n","      <th>27753442</th>\n","      <td>283228</td>\n","      <td>44761</td>\n","      <td>4.5</td>\n","      <td>1354159524</td>\n","    </tr>\n","    <tr>\n","      <th>27753443</th>\n","      <td>283228</td>\n","      <td>54286</td>\n","      <td>4.5</td>\n","      <td>1354159718</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>27753444 rows × 4 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fa8703f7-b113-4887-9e88-a6716cb0a525')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-fa8703f7-b113-4887-9e88-a6716cb0a525 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-fa8703f7-b113-4887-9e88-a6716cb0a525');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["# timestamp는 사용하지 않을 컬럼이니까 지워버리고 저장! but 용량은 줄어들었지만 행의 개수는 그대로...\n","rating_df.drop(columns = \"timestamp\", inplace=True)\n","rating_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"kPSPnzboodSW","executionInfo":{"status":"ok","timestamp":1675996704055,"user_tz":-540,"elapsed":578,"user":{"displayName":"남 현수","userId":"05471167397284801950"}},"outputId":"b5915474-8933-4fac-f3a7-72d1c34068da"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          userId  movieId  rating\n","0              1      307     3.5\n","1              1      481     3.5\n","2              1     1091     1.5\n","3              1     1257     4.5\n","4              1     1449     4.5\n","...          ...      ...     ...\n","27753439  283228     8542     4.5\n","27753440  283228     8712     4.5\n","27753441  283228    34405     4.5\n","27753442  283228    44761     4.5\n","27753443  283228    54286     4.5\n","\n","[27753444 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-b1dcc388-77ab-497d-8e31-213cc78b1589\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>userId</th>\n","      <th>movieId</th>\n","      <th>rating</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>307</td>\n","      <td>3.5</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>481</td>\n","      <td>3.5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>1091</td>\n","      <td>1.5</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1257</td>\n","      <td>4.5</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>1449</td>\n","      <td>4.5</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>27753439</th>\n","      <td>283228</td>\n","      <td>8542</td>\n","      <td>4.5</td>\n","    </tr>\n","    <tr>\n","      <th>27753440</th>\n","      <td>283228</td>\n","      <td>8712</td>\n","      <td>4.5</td>\n","    </tr>\n","    <tr>\n","      <th>27753441</th>\n","      <td>283228</td>\n","      <td>34405</td>\n","      <td>4.5</td>\n","    </tr>\n","    <tr>\n","      <th>27753442</th>\n","      <td>283228</td>\n","      <td>44761</td>\n","      <td>4.5</td>\n","    </tr>\n","    <tr>\n","      <th>27753443</th>\n","      <td>283228</td>\n","      <td>54286</td>\n","      <td>4.5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>27753444 rows × 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b1dcc388-77ab-497d-8e31-213cc78b1589')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b1dcc388-77ab-497d-8e31-213cc78b1589 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b1dcc388-77ab-497d-8e31-213cc78b1589');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["# 그러면 랜덤으로 30000개를 뽑아서 사용을 해보자 .. 10만개로 해봤는데 많이 느려져서 엄청 줄였다.\n","rating_df = rating_df.sample(n=30000)"],"metadata":{"id":"46AwfFrpLa8t"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["rating_df.info(memory_usage='deep') # 메모리 사이즈를 확인할 수 있다."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"O42WLvR2FV-x","executionInfo":{"status":"ok","timestamp":1675996707690,"user_tz":-540,"elapsed":18,"user":{"displayName":"남 현수","userId":"05471167397284801950"}},"outputId":"4ebf1582-d11e-42d7-cdd7-d067b0facf20"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 30000 entries, 17179423 to 24062829\n","Data columns (total 3 columns):\n"," #   Column   Non-Null Count  Dtype  \n","---  ------   --------------  -----  \n"," 0   userId   30000 non-null  int64  \n"," 1   movieId  30000 non-null  int64  \n"," 2   rating   30000 non-null  float64\n","dtypes: float64(1), int64(2)\n","memory usage: 937.5 KB\n"]}]},{"cell_type":"code","source":["rating_df.describe() #이 데이터에서는 최소 평점이 0.5 그리고 최댓값이 5점인 것을 알 수 있다."],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"9PyTY1K7SQOC","executionInfo":{"status":"ok","timestamp":1675996708009,"user_tz":-540,"elapsed":328,"user":{"displayName":"남 현수","userId":"05471167397284801950"}},"outputId":"b36da164-f07f-4811-d414-d7bd6c0ec9d8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              userId        movieId        rating\n","count   30000.000000   30000.000000  30000.000000\n","mean   142104.093767   18617.297700      3.537950\n","std     81514.816919   35161.702362      1.067297\n","min         1.000000       1.000000      0.500000\n","25%     71341.750000    1101.000000      3.000000\n","50%    142424.500000    2723.000000      4.000000\n","75%    212681.250000    7153.000000      4.000000\n","max    283228.000000  191739.000000      5.000000"],"text/html":["\n","  <div id=\"df-199a66e6-14f0-45a5-9bcb-68a9c4a723eb\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>userId</th>\n","      <th>movieId</th>\n","      <th>rating</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>30000.000000</td>\n","      <td>30000.000000</td>\n","      <td>30000.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>142104.093767</td>\n","      <td>18617.297700</td>\n","      <td>3.537950</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>81514.816919</td>\n","      <td>35161.702362</td>\n","      <td>1.067297</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.500000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>71341.750000</td>\n","      <td>1101.000000</td>\n","      <td>3.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>142424.500000</td>\n","      <td>2723.000000</td>\n","      <td>4.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>212681.250000</td>\n","      <td>7153.000000</td>\n","      <td>4.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>283228.000000</td>\n","      <td>191739.000000</td>\n","      <td>5.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-199a66e6-14f0-45a5-9bcb-68a9c4a723eb')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-199a66e6-14f0-45a5-9bcb-68a9c4a723eb button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-199a66e6-14f0-45a5-9bcb-68a9c4a723eb');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bi6BfBGxG74S","executionInfo":{"status":"ok","timestamp":1675996711886,"user_tz":-540,"elapsed":3892,"user":{"displayName":"남 현수","userId":"05471167397284801950"}},"outputId":"6d641d38-c371-441f-fa01-f4b7a9017bef"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["# movie data를 보게 되면 no genres listed 라는 것과 IMAX 라는 것이 있는데 그것은 데이터를 전처리 하는 과정에서 삭제.\n","movies_df = pd.read_csv(\"/content/drive/MyDrive/project4/ml-latest/movies.csv\")\n","index = movies_df[(movies_df[\"genres\"]==\"(no genres listed)\")|(movies_df[\"genres\"]==\"IMAX\")].index\n"],"metadata":{"id":"qOJnh6frSN2m"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["movies_df = movies_df.drop(index)\n","movies_df"],"metadata":{"id":"1gywMi_YHWCe","executionInfo":{"status":"ok","timestamp":1675996711899,"user_tz":-540,"elapsed":139,"user":{"displayName":"남 현수","userId":"05471167397284801950"}},"colab":{"base_uri":"https://localhost:8080/","height":423},"outputId":"b62366dd-870b-4390-afe0-0a1cc1cb692b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       movieId                                    title  \\\n","0            1                         Toy Story (1995)   \n","1            2                           Jumanji (1995)   \n","2            3                  Grumpier Old Men (1995)   \n","3            4                 Waiting to Exhale (1995)   \n","4            5       Father of the Bride Part II (1995)   \n","...        ...                                      ...   \n","58092   193874              Blondie's Big Moment (1947)   \n","58094   193878  Les tribulations d'une caissière (2011)   \n","58095   193880                 Her Name Was Mumu (2016)   \n","58096   193882                             Flora (2017)   \n","58097   193886                              Leal (2018)   \n","\n","                                            genres  \n","0      Adventure|Animation|Children|Comedy|Fantasy  \n","1                       Adventure|Children|Fantasy  \n","2                                   Comedy|Romance  \n","3                             Comedy|Drama|Romance  \n","4                                           Comedy  \n","...                                            ...  \n","58092                                       Comedy  \n","58094                                       Comedy  \n","58095                                        Drama  \n","58096                Adventure|Drama|Horror|Sci-Fi  \n","58097                           Action|Crime|Drama  \n","\n","[53831 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-80f16434-0b08-49cd-98db-65b90931a3e7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>movieId</th>\n","      <th>title</th>\n","      <th>genres</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>Toy Story (1995)</td>\n","      <td>Adventure|Animation|Children|Comedy|Fantasy</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>Jumanji (1995)</td>\n","      <td>Adventure|Children|Fantasy</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>Grumpier Old Men (1995)</td>\n","      <td>Comedy|Romance</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>Waiting to Exhale (1995)</td>\n","      <td>Comedy|Drama|Romance</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>Father of the Bride Part II (1995)</td>\n","      <td>Comedy</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>58092</th>\n","      <td>193874</td>\n","      <td>Blondie's Big Moment (1947)</td>\n","      <td>Comedy</td>\n","    </tr>\n","    <tr>\n","      <th>58094</th>\n","      <td>193878</td>\n","      <td>Les tribulations d'une caissière (2011)</td>\n","      <td>Comedy</td>\n","    </tr>\n","    <tr>\n","      <th>58095</th>\n","      <td>193880</td>\n","      <td>Her Name Was Mumu (2016)</td>\n","      <td>Drama</td>\n","    </tr>\n","    <tr>\n","      <th>58096</th>\n","      <td>193882</td>\n","      <td>Flora (2017)</td>\n","      <td>Adventure|Drama|Horror|Sci-Fi</td>\n","    </tr>\n","    <tr>\n","      <th>58097</th>\n","      <td>193886</td>\n","      <td>Leal (2018)</td>\n","      <td>Action|Crime|Drama</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>53831 rows × 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-80f16434-0b08-49cd-98db-65b90931a3e7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-80f16434-0b08-49cd-98db-65b90931a3e7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-80f16434-0b08-49cd-98db-65b90931a3e7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["# 장르를 보게되면 '|' 가 있는데 데이터를 분석하는 과정에서 불필요할 것 같아 지워버렸다.\n","movies_df[\"genres\"]=movies_df[\"genres\"].str.split(\"|\")\n","movies_df\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"3FrY2GFPSbtI","executionInfo":{"status":"ok","timestamp":1675996711902,"user_tz":-540,"elapsed":133,"user":{"displayName":"남 현수","userId":"05471167397284801950"}},"outputId":"46ed2dd9-d90b-4c26-a9f2-94d4bf86f7ec"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       movieId                                    title  \\\n","0            1                         Toy Story (1995)   \n","1            2                           Jumanji (1995)   \n","2            3                  Grumpier Old Men (1995)   \n","3            4                 Waiting to Exhale (1995)   \n","4            5       Father of the Bride Part II (1995)   \n","...        ...                                      ...   \n","58092   193874              Blondie's Big Moment (1947)   \n","58094   193878  Les tribulations d'une caissière (2011)   \n","58095   193880                 Her Name Was Mumu (2016)   \n","58096   193882                             Flora (2017)   \n","58097   193886                              Leal (2018)   \n","\n","                                                  genres  \n","0      [Adventure, Animation, Children, Comedy, Fantasy]  \n","1                         [Adventure, Children, Fantasy]  \n","2                                      [Comedy, Romance]  \n","3                               [Comedy, Drama, Romance]  \n","4                                               [Comedy]  \n","...                                                  ...  \n","58092                                           [Comedy]  \n","58094                                           [Comedy]  \n","58095                                            [Drama]  \n","58096                 [Adventure, Drama, Horror, Sci-Fi]  \n","58097                             [Action, Crime, Drama]  \n","\n","[53831 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-821a6b3c-a43f-4edd-a170-8145cbedb893\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>movieId</th>\n","      <th>title</th>\n","      <th>genres</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>Toy Story (1995)</td>\n","      <td>[Adventure, Animation, Children, Comedy, Fantasy]</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>Jumanji (1995)</td>\n","      <td>[Adventure, Children, Fantasy]</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>Grumpier Old Men (1995)</td>\n","      <td>[Comedy, Romance]</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>Waiting to Exhale (1995)</td>\n","      <td>[Comedy, Drama, Romance]</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>Father of the Bride Part II (1995)</td>\n","      <td>[Comedy]</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>58092</th>\n","      <td>193874</td>\n","      <td>Blondie's Big Moment (1947)</td>\n","      <td>[Comedy]</td>\n","    </tr>\n","    <tr>\n","      <th>58094</th>\n","      <td>193878</td>\n","      <td>Les tribulations d'une caissière (2011)</td>\n","      <td>[Comedy]</td>\n","    </tr>\n","    <tr>\n","      <th>58095</th>\n","      <td>193880</td>\n","      <td>Her Name Was Mumu (2016)</td>\n","      <td>[Drama]</td>\n","    </tr>\n","    <tr>\n","      <th>58096</th>\n","      <td>193882</td>\n","      <td>Flora (2017)</td>\n","      <td>[Adventure, Drama, Horror, Sci-Fi]</td>\n","    </tr>\n","    <tr>\n","      <th>58097</th>\n","      <td>193886</td>\n","      <td>Leal (2018)</td>\n","      <td>[Action, Crime, Drama]</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>53831 rows × 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-821a6b3c-a43f-4edd-a170-8145cbedb893')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-821a6b3c-a43f-4edd-a170-8145cbedb893 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-821a6b3c-a43f-4edd-a170-8145cbedb893');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["# 각 영화에 대한 사용자의 데이터가 필요! 유저의 평점이 포함되어 있는 rating_df와 movies_df 파일을 movieId 컬럼을 기준으로 inner 방식으로 합친다. (사용자 평가의 수 X 영화의 수) 만큼 늘어난다.\n","# 여기서 inner 방식이란? 두 데이터셋 간의 중복된 요소만을 Join하는 Inner Join\n","\n","\n","data = pd.merge(rating_df, movies_df, on = \"movieId\", how = 'inner')\n","\n","data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"7S3L9D29Sbmg","executionInfo":{"status":"ok","timestamp":1675996711906,"user_tz":-540,"elapsed":134,"user":{"displayName":"남 현수","userId":"05471167397284801950"}},"outputId":"4126b65b-c293-4291-c0e4-e8d7971427c1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   userId  movieId  rating                title          genres\n","0  175507   109487     4.5  Interstellar (2014)  [Sci-Fi, IMAX]\n","1   57353   109487     4.5  Interstellar (2014)  [Sci-Fi, IMAX]\n","2  135973   109487     4.5  Interstellar (2014)  [Sci-Fi, IMAX]\n","3  248840   109487     2.0  Interstellar (2014)  [Sci-Fi, IMAX]\n","4  190343   109487     3.0  Interstellar (2014)  [Sci-Fi, IMAX]"],"text/html":["\n","  <div id=\"df-658cc688-4a09-41a2-9159-fdf299a51663\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>userId</th>\n","      <th>movieId</th>\n","      <th>rating</th>\n","      <th>title</th>\n","      <th>genres</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>175507</td>\n","      <td>109487</td>\n","      <td>4.5</td>\n","      <td>Interstellar (2014)</td>\n","      <td>[Sci-Fi, IMAX]</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>57353</td>\n","      <td>109487</td>\n","      <td>4.5</td>\n","      <td>Interstellar (2014)</td>\n","      <td>[Sci-Fi, IMAX]</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>135973</td>\n","      <td>109487</td>\n","      <td>4.5</td>\n","      <td>Interstellar (2014)</td>\n","      <td>[Sci-Fi, IMAX]</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>248840</td>\n","      <td>109487</td>\n","      <td>2.0</td>\n","      <td>Interstellar (2014)</td>\n","      <td>[Sci-Fi, IMAX]</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>190343</td>\n","      <td>109487</td>\n","      <td>3.0</td>\n","      <td>Interstellar (2014)</td>\n","      <td>[Sci-Fi, IMAX]</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-658cc688-4a09-41a2-9159-fdf299a51663')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-658cc688-4a09-41a2-9159-fdf299a51663 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-658cc688-4a09-41a2-9159-fdf299a51663');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":11}]},{"cell_type":"markdown","source":[" # Pivot Table"],"metadata":{"id":"Y__R9cY8VQHc"}},{"cell_type":"code","source":["# 0이 나오는 이유는? 한 유저가 모든 영화를 다 봤던 것은 아니기에 0 이 나올 수 있다. \n","\n","\n","matrix = data.pivot_table(index = \"userId\", columns = \"title\", values = \"rating\").fillna(0)\n","\n","matrix.head(20)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":850},"id":"4uXYOCCNVDye","executionInfo":{"status":"ok","timestamp":1675996715295,"user_tz":-540,"elapsed":3519,"user":{"displayName":"남 현수","userId":"05471167397284801950"}},"outputId":"6c00e7bf-e897-4c8d-b1de-b9557beb55f3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["title   'Round Midnight (1986)  'burbs, The (1989)  'night Mother (1986)  \\\n","userId                                                                     \n","1                          0.0                 0.0                   0.0   \n","10                         0.0                 0.0                   0.0   \n","15                         0.0                 0.0                   0.0   \n","30                         0.0                 0.0                   0.0   \n","45                         0.0                 0.0                   0.0   \n","74                         0.0                 0.0                   0.0   \n","81                         0.0                 0.0                   0.0   \n","83                         0.0                 0.0                   0.0   \n","99                         0.0                 0.0                   0.0   \n","105                        0.0                 0.0                   0.0   \n","114                        0.0                 0.0                   0.0   \n","136                        0.0                 0.0                   0.0   \n","158                        0.0                 0.0                   0.0   \n","165                        0.0                 0.0                   0.0   \n","173                        0.0                 0.0                   0.0   \n","214                        0.0                 0.0                   0.0   \n","235                        0.0                 0.0                   0.0   \n","239                        0.0                 0.0                   0.0   \n","248                        0.0                 0.0                   0.0   \n","253                        0.0                 0.0                   0.0   \n","\n","title   (500) Days of Summer (2009)  (T)ERROR (2015)  \\\n","userId                                                 \n","1                               0.0              0.0   \n","10                              0.0              0.0   \n","15                              0.0              0.0   \n","30                              0.0              0.0   \n","45                              0.0              0.0   \n","74                              0.0              0.0   \n","81                              0.0              0.0   \n","83                              0.0              0.0   \n","99                              0.0              0.0   \n","105                             0.0              0.0   \n","114                             0.0              0.0   \n","136                             0.0              0.0   \n","158                             0.0              0.0   \n","165                             0.0              0.0   \n","173                             0.0              0.0   \n","214                             0.0              0.0   \n","235                             0.0              0.0   \n","239                             0.0              0.0   \n","248                             0.0              0.0   \n","253                             0.0              0.0   \n","\n","title   *batteries not included (1987)  ...And Justice for All (1979)  \\\n","userId                                                                  \n","1                                  0.0                            0.0   \n","10                                 0.0                            0.0   \n","15                                 0.0                            0.0   \n","30                                 0.0                            0.0   \n","45                                 0.0                            0.0   \n","74                                 0.0                            0.0   \n","81                                 0.0                            0.0   \n","83                                 0.0                            0.0   \n","99                                 0.0                            0.0   \n","105                                0.0                            0.0   \n","114                                0.0                            0.0   \n","136                                0.0                            0.0   \n","158                                0.0                            0.0   \n","165                                0.0                            0.0   \n","173                                0.0                            0.0   \n","214                                0.0                            0.0   \n","235                                0.0                            0.0   \n","239                                0.0                            0.0   \n","248                                0.0                            0.0   \n","253                                0.0                            0.0   \n","\n","title   1 (2014)  10 (1979)  10 Cloverfield Lane (2016)  ...  \\\n","userId                                                   ...   \n","1            0.0        0.0                         0.0  ...   \n","10           0.0        0.0                         0.0  ...   \n","15           0.0        0.0                         0.0  ...   \n","30           0.0        0.0                         0.0  ...   \n","45           0.0        0.0                         0.0  ...   \n","74           0.0        0.0                         0.0  ...   \n","81           0.0        0.0                         0.0  ...   \n","83           0.0        0.0                         0.0  ...   \n","99           0.0        0.0                         0.0  ...   \n","105          0.0        0.0                         0.0  ...   \n","114          0.0        0.0                         0.0  ...   \n","136          0.0        0.0                         0.0  ...   \n","158          0.0        0.0                         0.0  ...   \n","165          0.0        0.0                         0.0  ...   \n","173          0.0        0.0                         0.0  ...   \n","214          0.0        0.0                         0.0  ...   \n","235          0.0        0.0                         0.0  ...   \n","239          0.0        0.0                         0.0  ...   \n","248          0.0        0.0                         0.0  ...   \n","253          0.0        0.0                         0.0  ...   \n","\n","title   Zoolander (2001)  Zoolander 2 (2016)  Zoom (2015)  Zootopia (2016)  \\\n","userId                                                                       \n","1                    0.0                 0.0          0.0              0.0   \n","10                   0.0                 0.0          0.0              0.0   \n","15                   0.0                 0.0          0.0              0.0   \n","30                   0.0                 0.0          0.0              0.0   \n","45                   0.0                 0.0          0.0              0.0   \n","74                   0.0                 0.0          0.0              0.0   \n","81                   0.0                 0.0          0.0              0.0   \n","83                   0.0                 0.0          0.0              0.0   \n","99                   0.0                 0.0          0.0              0.0   \n","105                  0.0                 0.0          0.0              0.0   \n","114                  0.0                 0.0          0.0              0.0   \n","136                  0.0                 0.0          0.0              0.0   \n","158                  0.0                 0.0          0.0              0.0   \n","165                  0.0                 0.0          0.0              0.0   \n","173                  0.0                 0.0          0.0              0.0   \n","214                  0.0                 0.0          0.0              0.0   \n","235                  0.0                 0.0          0.0              0.0   \n","239                  0.0                 0.0          0.0              0.0   \n","248                  0.0                 0.0          0.0              0.0   \n","253                  0.0                 0.0          0.0              0.0   \n","\n","title   [REC] (2007)  eXistenZ (1999)  xXx (2002)  \\\n","userId                                              \n","1                0.0              0.0         0.0   \n","10               0.0              0.0         0.0   \n","15               0.0              0.0         0.0   \n","30               0.0              0.0         0.0   \n","45               0.0              0.0         0.0   \n","74               0.0              0.0         0.0   \n","81               0.0              0.0         0.0   \n","83               0.0              0.0         0.0   \n","99               0.0              0.0         0.0   \n","105              0.0              0.0         0.0   \n","114              0.0              0.0         0.0   \n","136              0.0              0.0         0.0   \n","158              0.0              0.0         0.0   \n","165              0.0              0.0         0.0   \n","173              0.0              0.0         0.0   \n","214              0.0              0.0         0.0   \n","235              0.0              0.0         0.0   \n","239              0.0              0.0         0.0   \n","248              0.0              0.0         0.0   \n","253              0.0              0.0         0.0   \n","\n","title   xXx: State of the Union (2005)  ¡Asu Mare! 2 (2015)  \\\n","userId                                                        \n","1                                  0.0                  0.0   \n","10                                 0.0                  0.0   \n","15                                 0.0                  0.0   \n","30                                 0.0                  0.0   \n","45                                 0.0                  0.0   \n","74                                 0.0                  0.0   \n","81                                 0.0                  0.0   \n","83                                 0.0                  0.0   \n","99                                 0.0                  0.0   \n","105                                0.0                  0.0   \n","114                                0.0                  0.0   \n","136                                0.0                  0.0   \n","158                                0.0                  0.0   \n","165                                0.0                  0.0   \n","173                                0.0                  0.0   \n","214                                0.0                  0.0   \n","235                                0.0                  0.0   \n","239                                0.0                  0.0   \n","248                                0.0                  0.0   \n","253                                0.0                  0.0   \n","\n","title   ¡Three Amigos! (1986)  \n","userId                         \n","1                         0.0  \n","10                        0.0  \n","15                        0.0  \n","30                        0.0  \n","45                        0.0  \n","74                        0.0  \n","81                        0.0  \n","83                        0.0  \n","99                        0.0  \n","105                       0.0  \n","114                       0.0  \n","136                       0.0  \n","158                       0.0  \n","165                       0.0  \n","173                       0.0  \n","214                       0.0  \n","235                       0.0  \n","239                       0.0  \n","248                       0.0  \n","253                       0.0  \n","\n","[20 rows x 6028 columns]"],"text/html":["\n","  <div id=\"df-f198b77e-8b4c-48a7-9549-eeed57123f7d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>title</th>\n","      <th>'Round Midnight (1986)</th>\n","      <th>'burbs, The (1989)</th>\n","      <th>'night Mother (1986)</th>\n","      <th>(500) Days of Summer (2009)</th>\n","      <th>(T)ERROR (2015)</th>\n","      <th>*batteries not included (1987)</th>\n","      <th>...And Justice for All (1979)</th>\n","      <th>1 (2014)</th>\n","      <th>10 (1979)</th>\n","      <th>10 Cloverfield Lane (2016)</th>\n","      <th>...</th>\n","      <th>Zoolander (2001)</th>\n","      <th>Zoolander 2 (2016)</th>\n","      <th>Zoom (2015)</th>\n","      <th>Zootopia (2016)</th>\n","      <th>[REC] (2007)</th>\n","      <th>eXistenZ (1999)</th>\n","      <th>xXx (2002)</th>\n","      <th>xXx: State of the Union (2005)</th>\n","      <th>¡Asu Mare! 2 (2015)</th>\n","      <th>¡Three Amigos! (1986)</th>\n","    </tr>\n","    <tr>\n","      <th>userId</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>74</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>81</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>83</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>99</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>105</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>114</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>136</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>158</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>165</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>173</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>214</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>235</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>239</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>248</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>253</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>20 rows × 6028 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f198b77e-8b4c-48a7-9549-eeed57123f7d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f198b77e-8b4c-48a7-9549-eeed57123f7d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f198b77e-8b4c-48a7-9549-eeed57123f7d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","source":["\n","# ID 134596"],"metadata":{"id":"KIQqT3JdjVdR"}},{"cell_type":"code","source":["# movies_df_origin = pd.read_csv(\"/content/drive/MyDrive/project4/ml-latest/movies.csv\")\n","# movies_df_origin "],"metadata":{"id":"4kxaZwQ2S8ge"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# movies_df_origin['genres'] = movies_df_origin['genres'].str.split(\"|\")\n","# movies_df_origin['genres'] \n"],"metadata":{"id":"kRQaGM4Gq1dz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# movies_df_origin[movies_df_origin['title']=='Toy Story (1995)']['genres'][0][0]"],"metadata":{"id":"mnihVyZ0eIm1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# ID 134596 이 평점점을 단 movieId\n","movie_Id = rating_df[rating_df[\"userId\"]== 134596][\"movieId\"]\n","movie_Id "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-xlbPmtxjZCy","executionInfo":{"status":"ok","timestamp":1675996715305,"user_tz":-540,"elapsed":62,"user":{"displayName":"남 현수","userId":"05471167397284801950"}},"outputId":"0f61ab6f-8d8c-44df-e36b-8c6470c8c451"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["13170361     7706\n","13169734     5479\n","13174243    99258\n","13174169    97713\n","13171041    26809\n","13170151     6912\n","Name: movieId, dtype: int64"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["# 각 영화에 대한 사용자의 데이터가 필요! ID ()이 평점점을 단 정보를 보여주는 movie_Id 데이터 프레임과 movies_df_origin 파일을 합쳐\n","prefered_genre_df = pd.merge(movie_Id, movies_df, on='movieId')\n","prefered_genre_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"4pMffbp1jeVP","executionInfo":{"status":"ok","timestamp":1675996715307,"user_tz":-540,"elapsed":52,"user":{"displayName":"남 현수","userId":"05471167397284801950"}},"outputId":"91ad3e43-b288-4dde-bd60-d40128f9c7a4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   movieId                                              title  \\\n","0     7706                             Animal Crackers (1930)   \n","1     5479                        K-19: The Widowmaker (2002)   \n","2    99258  Who Wants to Kill Jessie? (Kdo chce zabít Jess...   \n","3    97713  X from Outer Space, The (Uchû daikaijû Girara)...   \n","4    26809  Baby of Mâcon, The (a.k.a. The Baby of Macon) ...   \n","5     6912                       You'll Never Get Rich (1941)   \n","\n","                                 genres  \n","0                     [Comedy, Musical]  \n","1  [Action, Adventure, Drama, Thriller]  \n","2                      [Comedy, Sci-Fi]  \n","3                      [Horror, Sci-Fi]  \n","4                               [Drama]  \n","5            [Comedy, Musical, Romance]  "],"text/html":["\n","  <div id=\"df-fd950b35-3df2-400f-be0d-cd3edbd5b8b3\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>movieId</th>\n","      <th>title</th>\n","      <th>genres</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>7706</td>\n","      <td>Animal Crackers (1930)</td>\n","      <td>[Comedy, Musical]</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5479</td>\n","      <td>K-19: The Widowmaker (2002)</td>\n","      <td>[Action, Adventure, Drama, Thriller]</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>99258</td>\n","      <td>Who Wants to Kill Jessie? (Kdo chce zabít Jess...</td>\n","      <td>[Comedy, Sci-Fi]</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>97713</td>\n","      <td>X from Outer Space, The (Uchû daikaijû Girara)...</td>\n","      <td>[Horror, Sci-Fi]</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>26809</td>\n","      <td>Baby of Mâcon, The (a.k.a. The Baby of Macon) ...</td>\n","      <td>[Drama]</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6912</td>\n","      <td>You'll Never Get Rich (1941)</td>\n","      <td>[Comedy, Musical, Romance]</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fd950b35-3df2-400f-be0d-cd3edbd5b8b3')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-fd950b35-3df2-400f-be0d-cd3edbd5b8b3 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-fd950b35-3df2-400f-be0d-cd3edbd5b8b3');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["# 장르들을 담을 딕셔너리\n","unique_genre_dict = {}\n","\n","# 영화의 수만큼 반복된다.\n","for row in prefered_genre_df[\"genres\"]:\n","    for genre_name in row: \n","        if genre_name in [\"IMAX\",\"(no genres listed)\"]:\n","            continue\n","    \t# 현재 장르의 이름으로 저장된 데이터가 없다면\n","        elif (genre_name in unique_genre_dict) == False:\n","        \tunique_genre_dict[genre_name] = 1\n","        else:\n","        \tunique_genre_dict[genre_name] = unique_genre_dict[genre_name] + 1\n","            \n","            \n","unique_genre_dict"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"48ODWN9fl0G6","executionInfo":{"status":"ok","timestamp":1675996715308,"user_tz":-540,"elapsed":50,"user":{"displayName":"남 현수","userId":"05471167397284801950"}},"outputId":"7acc2f82-c3db-49e2-ae28-855b1bdaf589"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'Comedy': 3,\n"," 'Musical': 2,\n"," 'Action': 1,\n"," 'Adventure': 1,\n"," 'Drama': 2,\n"," 'Thriller': 1,\n"," 'Sci-Fi': 2,\n"," 'Horror': 1,\n"," 'Romance': 1}"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["total = sum(list(unique_genre_dict.values()))\n","percent = [round(i*100,4) for i in map(lambda x: x/total, list(unique_genre_dict.values()))]\n","percent"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2pAySL9urjhw","executionInfo":{"status":"ok","timestamp":1675996715309,"user_tz":-540,"elapsed":46,"user":{"displayName":"남 현수","userId":"05471167397284801950"}},"outputId":"3c8ac40a-04f5-4f35-d6b3-2e31ddc6e814"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[21.4286, 14.2857, 7.1429, 7.1429, 14.2857, 7.1429, 14.2857, 7.1429, 7.1429]"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["import seaborn as sns\n","import matplotlib.pyplot as plt\n","plt.figure(figsize=(25,8))\n","x = list(unique_genre_dict.keys())\n","y = list(unique_genre_dict.values())\n","sns.barplot(x, y, alpha=0.5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":558},"id":"9z8WErVkrrJb","executionInfo":{"status":"ok","timestamp":1675996716168,"user_tz":-540,"elapsed":899,"user":{"displayName":"남 현수","userId":"05471167397284801950"}},"outputId":"88aa5d4e-dd53-423b-af65-119b9af6e6ad"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  warnings.warn(\n"]},{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f8e5c4ea490>"]},"metadata":{},"execution_count":20},{"output_type":"display_data","data":{"text/plain":["<Figure size 1800x576 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["# ID 134596 \n","선호하는 장르 Top5: drama, comedy, action , war, adventure 순"],"metadata":{"id":"ywO2rvIcHuPO"}},{"cell_type":"code","source":["# 평점 분포도\n","rating = rating_df[rating_df[\"userId\"]== 134596][\"rating\"].value_counts(ascending = True)\n","sorted_rating = sorted(rating.index)\n","rating_distribution_df = pd.DataFrame(rating[sorted_rating])\n","rating_distribution_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"IIPsrArUrxKz","executionInfo":{"status":"ok","timestamp":1675996716171,"user_tz":-540,"elapsed":30,"user":{"displayName":"남 현수","userId":"05471167397284801950"}},"outputId":"a65abe4a-f6b6-46af-876a-81d3045fd29f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     rating\n","1.5       1\n","3.0       3\n","3.5       2"],"text/html":["\n","  <div id=\"df-182b54a0-207f-4a92-a92e-39905a651968\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>rating</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1.5</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3.0</th>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3.5</th>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-182b54a0-207f-4a92-a92e-39905a651968')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-182b54a0-207f-4a92-a92e-39905a651968 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-182b54a0-207f-4a92-a92e-39905a651968');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":21}]},{"cell_type":"markdown","source":["# ID 134596\n","평점: 2.5 / 2개\n","      3.0 / 5개\n","      3.5 / 4개\n","      4.0 / 1개"],"metadata":{"id":"Va817O8JIGnT"}},{"cell_type":"code","source":["# 평점 분포도 그래프 Controlling text fontsize with uniformtext\n","import plotly.express as px\n","\n","df = rating_distribution_df\n","fig = px.pie(df, values= rating[sorted_rating], names = rating[sorted_rating].index, title = \"Distribution chart of movie ratings\")\n","fig.update_traces(textposition='inside')\n","fig.update_layout(uniformtext_minsize=12, uniformtext_mode='hide')\n","fig.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"id":"p2u4xrjdr6ao","executionInfo":{"status":"ok","timestamp":1675996716560,"user_tz":-540,"elapsed":415,"user":{"displayName":"남 현수","userId":"05471167397284801950"}},"outputId":"1253fee2-a8a9-4875-f620-93b03d3b0320"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script src=\"https://cdn.plot.ly/plotly-2.8.3.min.js\"></script>                <div id=\"51b0c3ba-5d03-464e-bd26-66cda98ea212\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"51b0c3ba-5d03-464e-bd26-66cda98ea212\")) {                    Plotly.newPlot(                        \"51b0c3ba-5d03-464e-bd26-66cda98ea212\",                        [{\"domain\":{\"x\":[0.0,1.0],\"y\":[0.0,1.0]},\"hovertemplate\":\"label=%{label}<br>value=%{value}<extra></extra>\",\"labels\":[1.5,3.0,3.5],\"legendgroup\":\"\",\"name\":\"\",\"showlegend\":true,\"values\":[1,3,2],\"type\":\"pie\",\"textposition\":\"inside\"}],                        {\"template\":{\"data\":{\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}},\"legend\":{\"tracegroupgap\":0},\"title\":{\"text\":\"Distribution chart of movie ratings\"},\"uniformtext\":{\"minsize\":12,\"mode\":\"hide\"}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('51b0c3ba-5d03-464e-bd26-66cda98ea212');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"markdown","source":["# Pearson Correlation"],"metadata":{"id":"3qMUSflkV7kZ"}},{"cell_type":"code","source":["# 상관관계 조사하기! 유저가 재밌게 본 영화를 기준으로 비슷한 영화를 추천받고 싶다!! (재밌게 본 영화 = 평점을 매긴 영화중 )\n","\n","GENRE_WEIGHT = 0.1 \n","def pearsonR(s1, s2):\n","    s1_c = s1 - s1.mean()\n","    s2_c = s2 - s2.mean()\n","    return np.sum(s1_c * s2_c) / np.sqrt(np.sum(s1_c ** 2) * np.sum(s2_c ** 2))\n","\n","def recommend(input_movie, matrix, n , similar_genre=True): # similar_genre = True 를 하는 이유? input으로 받은 영화와 비슷한 장르의 가중치를 둘 것인지 여부!\n","    input_genres = movies_df[movies_df['title'] == input_movie][\"genres\"].iloc[0]\n","\n","    result = []\n","    for title in matrix.columns:\n","        if title == input_movie:\n","            continue\n","\n","        # rating comparison\n","        cor = pearsonR(matrix[input_movie], matrix[title]) # 상관관계가 높을 수록 관련이 높은 것이다.\n","\n","        # genre comparison\n","        if similar_genre and len(input_genres) > 0: # 장르의 길이가 0보다 클때 \n","            comparison_genres = movies_df[movies_df['title'] == title][\"genres\"].iloc[0] # comparison_genres: 지금 비교하고 있는 영화\n","\n","\n","            same_count = np.sum(np.isin(input_genres, comparison_genres)) # temp_genres(지금 비교하고 있는 영화의 장르)와 input한 영화 장르의 배열을 비교하여 똑같은 요소가 있으면 True를 반환환\n","            cor += (GENRE_WEIGHT * same_count) # 같은 장르가 많을 수록 ↑ -> 장르의 가중치를 준다!\n","\n","        if np.isnan(cor): # 상관관계를 구할 수 없으면 continue\n","            continue\n","        else:\n","            result.append((title, '{:.2f}'.format(cor), comparison_genres))\n","\n","    result.sort(key = lambda r: r[1], reverse = True) # rating이 높은 순서대로 sorting\n","\n","    return result[:n]\n","    \n"],"metadata":{"id":"C4Jx9pBNUQbi"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# prediction"],"metadata":{"id":"vlHffW-VuJdS"}},{"cell_type":"code","source":["recommend_result = recommend(\"K-19: The Widowmaker (2002)\", matrix,  10 , similar_genre = True)\n","\n","pd.DataFrame(recommend_result, columns = [\"title\", \"correlation\", \"genre\"])"],"metadata":{"id":"GewOhTztsrQw","colab":{"base_uri":"https://localhost:8080/","height":363},"executionInfo":{"status":"ok","timestamp":1675997522050,"user_tz":-540,"elapsed":49320,"user":{"displayName":"남 현수","userId":"05471167397284801950"}},"outputId":"6ebceea6-b947-4dba-d97a-bd4feff3d148"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                               title correlation  \\\n","0  Baby of Mâcon, The (a.k.a. The Baby of Macon) ...        0.93   \n","1                             Animal Crackers (1930)        0.83   \n","2  Who Wants to Kill Jessie? (Kdo chce zabít Jess...        0.83   \n","3  X from Outer Space, The (Uchû daikaijû Girara)...        0.83   \n","4                       You'll Never Get Rich (1941)        0.83   \n","5                                3:10 to Yuma (1957)        0.40   \n","6                                       Azumi (2003)        0.40   \n","7                               Blood Diamond (2006)        0.40   \n","8                        Bourne Identity, The (1988)        0.40   \n","9                          Bourne Legacy, The (2012)        0.40   \n","\n","                                              genre  \n","0                                           [Drama]  \n","1                                 [Comedy, Musical]  \n","2                                  [Comedy, Sci-Fi]  \n","3                                  [Horror, Sci-Fi]  \n","4                        [Comedy, Musical, Romance]  \n","5     [Action, Adventure, Drama, Thriller, Western]  \n","6              [Action, Adventure, Drama, Thriller]  \n","7  [Action, Adventure, Crime, Drama, Thriller, War]  \n","8     [Action, Adventure, Drama, Mystery, Thriller]  \n","9        [Action, Adventure, Drama, Thriller, IMAX]  "],"text/html":["\n","  <div id=\"df-86f122c9-4b82-49dc-ae32-d41b8933b85d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>title</th>\n","      <th>correlation</th>\n","      <th>genre</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Baby of Mâcon, The (a.k.a. The Baby of Macon) ...</td>\n","      <td>0.93</td>\n","      <td>[Drama]</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Animal Crackers (1930)</td>\n","      <td>0.83</td>\n","      <td>[Comedy, Musical]</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Who Wants to Kill Jessie? (Kdo chce zabít Jess...</td>\n","      <td>0.83</td>\n","      <td>[Comedy, Sci-Fi]</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>X from Outer Space, The (Uchû daikaijû Girara)...</td>\n","      <td>0.83</td>\n","      <td>[Horror, Sci-Fi]</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>You'll Never Get Rich (1941)</td>\n","      <td>0.83</td>\n","      <td>[Comedy, Musical, Romance]</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>3:10 to Yuma (1957)</td>\n","      <td>0.40</td>\n","      <td>[Action, Adventure, Drama, Thriller, Western]</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Azumi (2003)</td>\n","      <td>0.40</td>\n","      <td>[Action, Adventure, Drama, Thriller]</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Blood Diamond (2006)</td>\n","      <td>0.40</td>\n","      <td>[Action, Adventure, Crime, Drama, Thriller, War]</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Bourne Identity, The (1988)</td>\n","      <td>0.40</td>\n","      <td>[Action, Adventure, Drama, Mystery, Thriller]</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Bourne Legacy, The (2012)</td>\n","      <td>0.40</td>\n","      <td>[Action, Adventure, Drama, Thriller, IMAX]</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-86f122c9-4b82-49dc-ae32-d41b8933b85d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-86f122c9-4b82-49dc-ae32-d41b8933b85d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-86f122c9-4b82-49dc-ae32-d41b8933b85d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["# prefered_movie = prefered_genre_df[\"title\"]\n","# for i in prefered_movie:\n","#     recommend_result = recommend(i, matrix,  5 , similar_genre = True)\n","#     result =  pd.DataFrame(recommend_result, columns = [\"title\", \"correlation\", \"genre\"])\n","#     print(result)\n","#     print('-'*100)"],"metadata":{"id":"jnuQ-HQbusFT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# pd.DataFrame(movies_df[movies_df['title'] == \"Sahara (2005)\" ][\"genres\"])"],"metadata":{"id":"Bg36b0d-x8cD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[" #iloc: 전체 데이터 프레임에서 인덱스 이름이 0인 행만 추출\n"," #loc:  전체 데이터 프레임에서 0번째 행에 있는 값들만 추출"],"metadata":{"id":"9lEeh98CyRFr"},"execution_count":null,"outputs":[]}]}